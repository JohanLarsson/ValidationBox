<Window x:Class="ValidationBox.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:validationBox="clr-namespace:ValidationBox"
        Title="MainWindow"
        Width="525"
        Height="350"
        mc:Ignorable="d">
    <Window.Resources>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="AutomationProperties.ItemStatus">
                <Setter.Value>
                    <MultiBinding StringFormat="HasError: {0} FirstError: {1}">
                        <Binding Path="(Validation.HasError)" RelativeSource="{RelativeSource Self}" />
                        <Binding Path="(Validation.Errors)[0].ErrorContent" 
                                 RelativeSource="{RelativeSource Self}" 
                                 Converter="{x:Static validationBox:ErrorContentConverter.Default}"
                                 FallbackValue=""/>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <validationBox:ViewModel />
    </Window.DataContext>
    <StackPanel>
        <TextBox x:Name="TextBox">
            <TextBox.Text>
                <Binding Path="IntValue" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validationBox:CanParseIntValidationRule ValidationStep="RawProposedValue" />
                        <validationBox:LessThanValidationRule ValidationStep="ConvertedProposedValue" Value="5" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <TextBlock Foreground="DarkRed" Text="{Binding Path=(Validation.Errors)[0].ErrorContent, ElementName=TextBox}" />

        <TextBlock Foreground="Salmon">
            <TextBlock.Text>
                <MultiBinding StringFormat="HasError: {0} FirstError: {1}">
                    <Binding ElementName="TextBox" Path="(Validation.HasError)" />
                    <Binding ElementName="TextBox" Path="(Validation.Errors)[0].ErrorContent" />
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>

        <TextBlock Foreground="Gray">
            <TextBlock.Text>
                <MultiBinding StringFormat="HasError: {0} FirstError: {1}">
                    <Binding ElementName="TextBox" Path="(Validation.HasError)" />
                    <Binding Converter="{x:Static validationBox:ErrorContentConverter.Default}"
                             ElementName="TextBox"
                             Path="(Validation.Errors)[0].ErrorContent" />
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>

        <TextBlock Foreground="Red">
            <TextBlock.Text>
                <MultiBinding Converter="{x:Static validationBox:FirstErrorForElementMultiValueConverter.Default}">
                    <Binding ElementName="TextBox" />
                    <Binding ElementName="TextBox" Path="(Validation.Errors).Count" />
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>

        <TextBlock Foreground="Purple" Text="{validationBox:FirstValidationErrorFor ElementName=TextBox}" />

        <TextBlock Foreground="Blue">
            <TextBlock.Text>
                <MultiBinding StringFormat="{}{0}">
                    <Binding Converter="{x:Static validationBox:FirstErrorOrDefaultConverter.Default}"
                             ElementName="TextBox"
                             Path="(Validation.Errors)" />
                    <Binding ElementName="TextBox" Path="(Validation.Errors).Count" />
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>

        <TextBlock Foreground="Orange" Text="{Binding Path=(Validation.Errors), ElementName=TextBox, Converter={x:Static validationBox:FirstErrorOrDefaultConverter.Default}}" />

        <TextBlock x:Name="ErrorBlock" Foreground="HotPink" />
        <Button Click="OnFetchErrorClick" Content="Fetch error" />
    </StackPanel>
</Window>
